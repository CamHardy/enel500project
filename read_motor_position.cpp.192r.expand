
;; Function int getch() (_Z5getchv, funcdef_no=1569, decl_uid=32078, cgraph_uid=352, symbol_order=355)

int getch() ()
{
  int D.32725;
  int ch;
  struct termios newt;
  struct termios oldt;
  int D.32723;
  unsigned int D.32722;
  unsigned int D.32721;
  unsigned int _4;
  unsigned int _5;
  int _9;
  int _12;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  tcgetattr (0, &oldt);
  newt = oldt;
  _4 = newt.c_lflag;
  _5 = _4 & 4294967285;
  newt.c_lflag = _5;
  tcsetattr (0, 0, &newt);
  _9 = getchar ();
  ch_10 = _9;
  tcsetattr (0, 0, &oldt);
  _12 = ch_10;
  oldt ={v} {CLOBBER};
  newt ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L1>:
  return _12;
;;    succ:       EXIT

}



Partition map 

Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 9 (_9 - 9 )
Partition 10 (ch_10 - 10 )
Partition 12 (_12 - 12 )

After Coalescing:

Partition map 

Partition 0 (_4 - 4 )
Partition 1 (_5 - 5 )
Partition 2 (_9 - 9 )
Partition 3 (ch_10 - 10 )
Partition 4 (_12 - 12 )

int getch() ()
{
  int D.32725;
  int ch;
  struct termios newt;
  struct termios oldt;
  int D.32723;
  unsigned int D.32722;
  unsigned int D.32721;
  unsigned int _4;
  unsigned int _5;
  int _9;
  int _12;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  tcgetattr (0, &oldt);
  newt = oldt;
  _4 = newt.c_lflag;
  _5 = _4 & 4294967285;
  newt.c_lflag = _5;
  tcsetattr (0, 0, &newt);
  _9 = getchar ();
  ch_10 = _9;
  tcsetattr (0, 0, &oldt);
  _12 = ch_10;
  oldt ={v} {CLOBBER};
  newt ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L1>:
  return _12;
;;    succ:       EXIT

}


Partition 2: size 60 align 16
	newt
Partition 1: size 60 align 16
	oldt
Partition 0: size 4 align 4
	ch_10

;; Generating RTL for gimple basic block 2

;; tcgetattr (0, &oldt);

(insn 6 5 7 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:55 -1
     (nil))

(insn 7 6 8 (set (reg:DI 4 si)
        (reg:DI 92)) read_motor_position.cpp:55 -1
     (nil))

(insn 8 7 9 (set (reg:SI 5 di)
        (const_int 0 [0])) read_motor_position.cpp:55 -1
     (nil))

(call_insn 9 8 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tcgetattr") [flags 0x41]  <function_decl 0x7f2142b9c510 tcgetattr>) [0 tcgetattr S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:55 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

;; newt = oldt;

(insn 10 9 11 (set (reg:DI 93)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [0 oldt+0 S8 A64])) read_motor_position.cpp:56 -1
     (nil))

(insn 11 10 12 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 newt+0 S8 A64])
        (reg:DI 93)) read_motor_position.cpp:56 -1
     (nil))

(insn 12 11 13 (set (reg:DI 94)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [0 oldt+8 S8 A64])) read_motor_position.cpp:56 -1
     (nil))

(insn 13 12 14 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 newt+8 S8 A64])
        (reg:DI 94)) read_motor_position.cpp:56 -1
     (nil))

(insn 14 13 15 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [0 oldt+16 S8 A64])) read_motor_position.cpp:56 -1
     (nil))

(insn 15 14 16 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 newt+16 S8 A64])
        (reg:DI 95)) read_motor_position.cpp:56 -1
     (nil))

(insn 16 15 17 (set (reg:DI 96)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 oldt+24 S8 A64])) read_motor_position.cpp:56 -1
     (nil))

(insn 17 16 18 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 newt+24 S8 A64])
        (reg:DI 96)) read_motor_position.cpp:56 -1
     (nil))

(insn 18 17 19 (set (reg:DI 97)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 oldt+32 S8 A64])) read_motor_position.cpp:56 -1
     (nil))

(insn 19 18 20 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 newt+32 S8 A64])
        (reg:DI 97)) read_motor_position.cpp:56 -1
     (nil))

(insn 20 19 21 (set (reg:DI 98)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 oldt+40 S8 A64])) read_motor_position.cpp:56 -1
     (nil))

(insn 21 20 22 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 newt+40 S8 A64])
        (reg:DI 98)) read_motor_position.cpp:56 -1
     (nil))

(insn 22 21 23 (set (reg:DI 99)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 oldt+48 S8 A64])) read_motor_position.cpp:56 -1
     (nil))

(insn 23 22 24 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 newt+48 S8 A64])
        (reg:DI 99)) read_motor_position.cpp:56 -1
     (nil))

(insn 24 23 25 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 oldt+56 S4 A64])) read_motor_position.cpp:56 -1
     (nil))

(insn 25 24 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 newt+56 S4 A64])
        (reg:SI 100)) read_motor_position.cpp:56 -1
     (nil))

;; _4 = newt.c_lflag;

(insn 26 25 0 (set (reg:SI 87 [ D.32828 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 newt.c_lflag+0 S4 A32])) read_motor_position.cpp:57 -1
     (nil))

;; _5 = _4 & 4294967285;

(insn 27 26 0 (parallel [
            (set (reg:SI 88 [ D.32828 ])
                (and:SI (reg:SI 87 [ D.32828 ])
                    (const_int -11 [0xfffffffffffffff5])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:57 -1
     (nil))

;; newt.c_lflag = _5;

(insn 28 27 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 newt.c_lflag+0 S4 A32])
        (reg:SI 88 [ D.32828 ])) read_motor_position.cpp:57 -1
     (nil))

;; tcsetattr (0, 0, &newt);

(insn 29 28 30 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:58 -1
     (nil))

(insn 30 29 31 (set (reg:DI 1 dx)
        (reg:DI 101)) read_motor_position.cpp:58 -1
     (nil))

(insn 31 30 32 (set (reg:SI 4 si)
        (const_int 0 [0])) read_motor_position.cpp:58 -1
     (nil))

(insn 32 31 33 (set (reg:SI 5 di)
        (const_int 0 [0])) read_motor_position.cpp:58 -1
     (nil))

(call_insn 33 32 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tcsetattr") [flags 0x41]  <function_decl 0x7f2142b9c5e8 tcsetattr>) [0 tcsetattr S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:58 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _9 = getchar ();

(call_insn 34 33 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getchar") [flags 0x41]  <function_decl 0x7f2142be9798 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:59 -1
     (nil)
    (nil))

(insn 35 34 0 (set (reg:SI 89 [ D.32829 ])
        (reg:SI 0 ax)) read_motor_position.cpp:59 -1
     (nil))

;; ch_10 = _9;

(insn 36 35 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [0 ch+0 S4 A32])
        (reg:SI 89 [ D.32829 ])) read_motor_position.cpp:59 -1
     (nil))

;; tcsetattr (0, 0, &oldt);

(insn 37 36 38 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:60 -1
     (nil))

(insn 38 37 39 (set (reg:DI 1 dx)
        (reg:DI 102)) read_motor_position.cpp:60 -1
     (nil))

(insn 39 38 40 (set (reg:SI 4 si)
        (const_int 0 [0])) read_motor_position.cpp:60 -1
     (nil))

(insn 40 39 41 (set (reg:SI 5 di)
        (const_int 0 [0])) read_motor_position.cpp:60 -1
     (nil))

(call_insn 41 40 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tcsetattr") [flags 0x41]  <function_decl 0x7f2142b9c5e8 tcsetattr>) [0 tcsetattr S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:60 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _12 = ch_10;

(insn 42 41 0 (set (reg:SI 90 [ D.32829 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [0 ch+0 S4 A32])) read_motor_position.cpp:61 -1
     (nil))

;; oldt ={v} {CLOBBER};

(nil)

;; newt ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 3

;; <L1>:

(code_label 43 42 44 2 "" [0 uses])

(note 44 43 0 NOTE_INSN_BASIC_BLOCK)

;; return _12;

(insn 45 44 46 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.32829 ])) read_motor_position.cpp:61 -1
     (nil))

(jump_insn 46 45 47 (set (pc)
        (label_ref 0)) read_motor_position.cpp:61 -1
     (nil))

(barrier 47 46 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 46.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.32830+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:51 -1
     (nil))
(insn 6 3 7 2 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:55 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (reg:DI 92)) read_motor_position.cpp:55 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 5 di)
        (const_int 0 [0])) read_motor_position.cpp:55 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tcgetattr") [flags 0x41]  <function_decl 0x7f2142b9c510 tcgetattr>) [0 tcgetattr S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:55 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 93)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [0 oldt+0 S8 A64])) read_motor_position.cpp:56 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 newt+0 S8 A64])
        (reg:DI 93)) read_motor_position.cpp:56 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 94)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [0 oldt+8 S8 A64])) read_motor_position.cpp:56 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 newt+8 S8 A64])
        (reg:DI 94)) read_motor_position.cpp:56 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [0 oldt+16 S8 A64])) read_motor_position.cpp:56 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 newt+16 S8 A64])
        (reg:DI 95)) read_motor_position.cpp:56 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 96)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 oldt+24 S8 A64])) read_motor_position.cpp:56 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 newt+24 S8 A64])
        (reg:DI 96)) read_motor_position.cpp:56 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 97)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 oldt+32 S8 A64])) read_motor_position.cpp:56 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 newt+32 S8 A64])
        (reg:DI 97)) read_motor_position.cpp:56 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 98)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 oldt+40 S8 A64])) read_motor_position.cpp:56 -1
     (nil))
(insn 21 20 22 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 newt+40 S8 A64])
        (reg:DI 98)) read_motor_position.cpp:56 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 99)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 oldt+48 S8 A64])) read_motor_position.cpp:56 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 newt+48 S8 A64])
        (reg:DI 99)) read_motor_position.cpp:56 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 oldt+56 S4 A64])) read_motor_position.cpp:56 -1
     (nil))
(insn 25 24 26 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 newt+56 S4 A64])
        (reg:SI 100)) read_motor_position.cpp:56 -1
     (nil))
(insn 26 25 27 2 (set (reg:SI 87 [ D.32828 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 newt.c_lflag+0 S4 A32])) read_motor_position.cpp:57 -1
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg:SI 88 [ D.32828 ])
                (and:SI (reg:SI 87 [ D.32828 ])
                    (const_int -11 [0xfffffffffffffff5])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:57 -1
     (nil))
(insn 28 27 29 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 newt.c_lflag+0 S4 A32])
        (reg:SI 88 [ D.32828 ])) read_motor_position.cpp:57 -1
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:58 -1
     (nil))
(insn 30 29 31 2 (set (reg:DI 1 dx)
        (reg:DI 101)) read_motor_position.cpp:58 -1
     (nil))
(insn 31 30 32 2 (set (reg:SI 4 si)
        (const_int 0 [0])) read_motor_position.cpp:58 -1
     (nil))
(insn 32 31 33 2 (set (reg:SI 5 di)
        (const_int 0 [0])) read_motor_position.cpp:58 -1
     (nil))
(call_insn 33 32 34 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tcsetattr") [flags 0x41]  <function_decl 0x7f2142b9c5e8 tcsetattr>) [0 tcsetattr S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:58 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getchar") [flags 0x41]  <function_decl 0x7f2142be9798 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:59 -1
     (nil)
    (nil))
(insn 35 34 36 2 (set (reg:SI 89 [ D.32829 ])
        (reg:SI 0 ax)) read_motor_position.cpp:59 -1
     (nil))
(insn 36 35 37 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [0 ch+0 S4 A32])
        (reg:SI 89 [ D.32829 ])) read_motor_position.cpp:59 -1
     (nil))
(insn 37 36 38 2 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:60 -1
     (nil))
(insn 38 37 39 2 (set (reg:DI 1 dx)
        (reg:DI 102)) read_motor_position.cpp:60 -1
     (nil))
(insn 39 38 40 2 (set (reg:SI 4 si)
        (const_int 0 [0])) read_motor_position.cpp:60 -1
     (nil))
(insn 40 39 41 2 (set (reg:SI 5 di)
        (const_int 0 [0])) read_motor_position.cpp:60 -1
     (nil))
(call_insn 41 40 42 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tcsetattr") [flags 0x41]  <function_decl 0x7f2142b9c5e8 tcsetattr>) [0 tcsetattr S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:60 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 42 41 45 2 (set (reg:SI 90 [ D.32829 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [0 ch+0 S4 A32])) read_motor_position.cpp:61 -1
     (nil))
(insn 45 42 49 2 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.32829 ])) read_motor_position.cpp:61 -1
     (nil))
(insn 49 45 50 2 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) read_motor_position.cpp:65 -1
     (nil))
(insn 50 49 51 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.32830+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) read_motor_position.cpp:65 -1
     (nil))
(jump_insn 51 50 57 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) read_motor_position.cpp:65 -1
     (nil)
 -> 54)
;;  succ:       7
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 57 51 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 52 57 53 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f21414dc798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:65 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 53 52 54)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 54 53 58 7 3 "" [1 uses])
(note 58 54 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 58 0 7 (use (reg/i:SI 0 ax)) read_motor_position.cpp:65 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function int main() (main, funcdef_no=1570, decl_uid=32086, cgraph_uid=353, symbol_order=356)

int main() ()
{
  int D.32815;
  int D.32814;
  int D.32813;
  bool D.32812;
  bool D.32811;
  struct PacketHandler * D.32810;
  struct PortHandler * D.32809;
  int value;
  uint16_t dxl_current_speed;
  uint16_t dxl_present_position;
  uint8_t dxl_error;
  int dxl_comm_result;
  struct PacketHandler * packetHandler;
  struct PortHandler * portHandler;
  int (*__vtbl_ptr_type) () D.32807;
  int (*__vtbl_ptr_type) () * D.32806;
  int (*__vtbl_ptr_type) () * D.32805;
  int D.32804;
  int i.13;
  int D.32802;
  short unsigned int dxl_present_position.12;
  int D.32795;
  unsigned char dxl_error.11;
  int (*__vtbl_ptr_type) () D.32793;
  int (*__vtbl_ptr_type) () * D.32792;
  int (*__vtbl_ptr_type) () * D.32791;
  unsigned char dxl_error.10;
  int (*__vtbl_ptr_type) () D.32786;
  int (*__vtbl_ptr_type) () * D.32785;
  int (*__vtbl_ptr_type) () * D.32784;
  int D.32781;
  int D.32780;
  int i.9;
  int (*__vtbl_ptr_type) () D.32778;
  int (*__vtbl_ptr_type) () * D.32777;
  int (*__vtbl_ptr_type) () * D.32776;
  int D.32774;
  unsigned char dxl_error.8;
  int (*__vtbl_ptr_type) () D.32772;
  int (*__vtbl_ptr_type) () * D.32771;
  int (*__vtbl_ptr_type) () * D.32770;
  unsigned char dxl_error.7;
  int (*__vtbl_ptr_type) () D.32765;
  int (*__vtbl_ptr_type) () * D.32764;
  int (*__vtbl_ptr_type) () * D.32763;
  int D.32760;
  int D.32759;
  int i.6;
  int (*__vtbl_ptr_type) () D.32757;
  int (*__vtbl_ptr_type) () * D.32756;
  int (*__vtbl_ptr_type) () * D.32755;
  int i.5;
  int i.4;
  int i.3;
  int i.2;
  int (*__vtbl_ptr_type) () D.32740;
  int (*__vtbl_ptr_type) () * D.32739;
  int (*__vtbl_ptr_type) () * D.32738;
  bool retval.1;
  int D.32736;
  int (*__vtbl_ptr_type) () D.32732;
  int (*__vtbl_ptr_type) () * D.32731;
  int (*__vtbl_ptr_type) () * D.32730;
  bool retval.0;
  int _1;
  struct PortHandler * _12;
  struct PacketHandler * _15;
  int (*__vtbl_ptr_type) () * _21;
  int (*__vtbl_ptr_type) () * _22;
  int (*__vtbl_ptr_type) () _23;
  bool _25;
  bool retval.0_26;
  int _28;
  int (*__vtbl_ptr_type) () * _30;
  int (*__vtbl_ptr_type) () * _31;
  int (*__vtbl_ptr_type) () _32;
  bool _34;
  bool retval.1_35;
  int _37;
  int _40;
  int i.2_42;
  int i.3_43;
  int i.4_45;
  int i.5_46;
  int (*__vtbl_ptr_type) () * _49;
  int (*__vtbl_ptr_type) () * _50;
  int (*__vtbl_ptr_type) () _51;
  int i.6_52;
  int _53;
  int _54;
  int _56;
  int (*__vtbl_ptr_type) () * _58;
  int (*__vtbl_ptr_type) () * _59;
  int (*__vtbl_ptr_type) () _60;
  unsigned char dxl_error.7_62;
  int (*__vtbl_ptr_type) () * _63;
  int (*__vtbl_ptr_type) () * _64;
  int (*__vtbl_ptr_type) () _65;
  unsigned char dxl_error.8_66;
  int _67;
  int (*__vtbl_ptr_type) () * _69;
  int (*__vtbl_ptr_type) () * _70;
  int (*__vtbl_ptr_type) () _71;
  int i.9_72;
  int _73;
  int _74;
  int _76;
  int (*__vtbl_ptr_type) () * _78;
  int (*__vtbl_ptr_type) () * _79;
  int (*__vtbl_ptr_type) () _80;
  unsigned char dxl_error.10_82;
  int (*__vtbl_ptr_type) () * _83;
  int (*__vtbl_ptr_type) () * _84;
  int (*__vtbl_ptr_type) () _85;
  unsigned char dxl_error.11_86;
  int _87;
  short unsigned int dxl_present_position.12_89;
  int _90;
  int i.13_91;
  int _92;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _12 = dynamixel::PortHandler::getPortHandler ("/dev/ttyUSB0");
  portHandler_13 = _12;
  _15 = dynamixel::PacketHandler::getPacketHandler (1.0e+0);
  packetHandler_16 = _15;
  dxl_comm_result_17 = -1001;
  dxl_error = 0;
  dxl_present_position = 0;
  dxl_current_speed_20 = 0;
  _21 = portHandler_13->_vptr.PortHandler;
  _22 = _21 + 16;
  _23 = *_22;
  _25 = OBJ_TYPE_REF(_23;(struct PortHandler)portHandler_13->2) (portHandler_13);
  retval.0_26 = _25;
  if (retval.0_26 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin_puts (&"Succeeded to open the port!"[0]);
  goto <bb 5>;
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  __builtin_puts (&"Failed to open the port!"[0]);
  _28 = 0;
  goto <bb 25>;
;;    succ:       25

;;   basic block 5, loop depth 0
;;    pred:       3
  _30 = portHandler_13->_vptr.PortHandler;
  _31 = _30 + 56;
  _32 = *_31;
  _34 = OBJ_TYPE_REF(_32;(struct PortHandler)portHandler_13->7) (portHandler_13, 1000000);
  retval.1_35 = _34;
  if (retval.1_35 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  __builtin_puts (&"Succeeded to change the baudrate!"[0]);
  goto <bb 8>;
;;    succ:       8

;;   basic block 7, loop depth 0
;;    pred:       5
  __builtin_puts (&"Failed to change the baudrate!"[0]);
  _37 = 0;
  goto <bb 25>;
;;    succ:       25

;;   basic block 8, loop depth 1
;;    pred:       6
;;                24
  _40 = getch ();
  value_41 = _40;
  if (value_41 == 119)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 1
;;    pred:       8
  i.2_42 = i;
  i.3_43 = i.2_42 + 1;
  i = i.3_43;
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       8
;;                9
  if (value_41 == 115)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 1
;;    pred:       10
  i.4_45 = i;
  i.5_46 = i.4_45 + -1;
  i = i.5_46;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       10
;;                11
  i = 0;
  _49 = packetHandler_16->_vptr.PacketHandler;
  _50 = _49 + 176;
  _51 = *_50;
  i.6_52 = i;
  _53 = dxl_ID[i.6_52];
  _54 = _53 & 255;
  _56 = OBJ_TYPE_REF(_51;(struct PacketHandler)packetHandler_16->22) (packetHandler_16, portHandler_13, _54, 36, &dxl_present_position, &dxl_error);
  dxl_comm_result_57 = _56;
  if (dxl_comm_result_57 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 1
;;    pred:       12
  _58 = packetHandler_16->_vptr.PacketHandler;
  _59 = _58 + 24;
  _60 = *_59;
  OBJ_TYPE_REF(_60;(struct PacketHandler)packetHandler_16->3) (packetHandler_16, dxl_comm_result_57);
  goto <bb 16>;
;;    succ:       16

;;   basic block 14, loop depth 1
;;    pred:       12
  dxl_error.7_62 = dxl_error;
  if (dxl_error.7_62 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15
;;                16

;;   basic block 15, loop depth 1
;;    pred:       14
  _63 = packetHandler_16->_vptr.PacketHandler;
  _64 = _63 + 32;
  _65 = *_64;
  dxl_error.8_66 = dxl_error;
  _67 = (int) dxl_error.8_66;
  OBJ_TYPE_REF(_65;(struct PacketHandler)packetHandler_16->4) (packetHandler_16, _67);
;;    succ:       16

;;   basic block 16, loop depth 1
;;    pred:       13
;;                14
;;                15
  _69 = packetHandler_16->_vptr.PacketHandler;
  _70 = _69 + 248;
  _71 = *_70;
  i.9_72 = i;
  _73 = dxl_ID[i.9_72];
  _74 = _73 & 255;
  _76 = OBJ_TYPE_REF(_71;(struct PacketHandler)packetHandler_16->31) (packetHandler_16, portHandler_13, _74, 32, 20, &dxl_error);
  dxl_comm_result_77 = _76;
  if (dxl_comm_result_77 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 1
;;    pred:       16
  _78 = packetHandler_16->_vptr.PacketHandler;
  _79 = _78 + 24;
  _80 = *_79;
  OBJ_TYPE_REF(_80;(struct PacketHandler)packetHandler_16->3) (packetHandler_16, dxl_comm_result_77);
  goto <bb 20>;
;;    succ:       20

;;   basic block 18, loop depth 1
;;    pred:       16
  dxl_error.10_82 = dxl_error;
  if (dxl_error.10_82 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19
;;                20

;;   basic block 19, loop depth 1
;;    pred:       18
  _83 = packetHandler_16->_vptr.PacketHandler;
  _84 = _83 + 32;
  _85 = *_84;
  dxl_error.11_86 = dxl_error;
  _87 = (int) dxl_error.11_86;
  OBJ_TYPE_REF(_85;(struct PacketHandler)packetHandler_16->4) (packetHandler_16, _87);
;;    succ:       20

;;   basic block 20, loop depth 1
;;    pred:       17
;;                18
;;                19
  if (value_41 == 119)
    goto <bb 23>;
  else
    goto <bb 21>;
;;    succ:       23
;;                21

;;   basic block 21, loop depth 1
;;    pred:       20
  if (value_41 == 115)
    goto <bb 23>;
  else
    goto <bb 22>;
;;    succ:       23
;;                22

;;   basic block 22, loop depth 1
;;    pred:       21
  if (value_41 == 122)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23
;;                24

;;   basic block 23, loop depth 1
;;    pred:       20
;;                21
;;                22
  dxl_present_position.12_89 = dxl_present_position;
  _90 = (int) dxl_present_position.12_89;
  i.13_91 = i;
  _92 = dxl_ID[i.13_91];
  printf ("ID: %d | Present Position: %03d\n", _92, _90);
;;    succ:       24

;;   basic block 24, loop depth 1
;;    pred:       22
;;                23
  goto <bb 8>;
;;    succ:       8

;;   basic block 25, loop depth 0
;;    pred:       4
;;                7
  # _1 = PHI <_28(4), _37(7)>
  dxl_error ={v} {CLOBBER};
  dxl_present_position ={v} {CLOBBER};
;;    succ:       26

;;   basic block 26, loop depth 0
;;    pred:       25
<L30>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 12 (_12 - 12 )
Partition 13 (portHandler_13 - 13 )
Partition 15 (_15 - 15 )
Partition 16 (packetHandler_16 - 16 )
Partition 17 (dxl_comm_result_17 - 17 )
Partition 20 (dxl_current_speed_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 25 (_25 - 25 )
Partition 26 (retval.0_26 - 26 )
Partition 28 (_28 - 28 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 34 (_34 - 34 )
Partition 35 (retval.1_35 - 35 )
Partition 37 (_37 - 37 )
Partition 40 (_40 - 40 )
Partition 41 (value_41 - 41 )
Partition 42 (i.2_42 - 42 )
Partition 43 (i.3_43 - 43 )
Partition 45 (i.4_45 - 45 )
Partition 46 (i.5_46 - 46 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (i.6_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 56 (_56 - 56 )
Partition 57 (dxl_comm_result_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 62 (dxl_error.7_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (dxl_error.8_66 - 66 )
Partition 67 (_67 - 67 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (i.9_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 76 (_76 - 76 )
Partition 77 (dxl_comm_result_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 82 (dxl_error.10_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (dxl_error.11_86 - 86 )
Partition 87 (_87 - 87 )
Partition 89 (dxl_present_position.12_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (i.13_91 - 91 )
Partition 92 (_92 - 92 )


Partition map 

Partition 0 (_1 - 1 )
Partition 1 (dxl_comm_result_17 - 17 )
Partition 2 (_25 - 25 )
Partition 3 (retval.0_26 - 26 )
Partition 4 (_28 - 28 )
Partition 5 (_34 - 34 )
Partition 6 (retval.1_35 - 35 )
Partition 7 (_37 - 37 )
Partition 8 (dxl_comm_result_57 - 57 )
Partition 9 (dxl_comm_result_77 - 77 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) dxl_comm_result_17 <-> dxl_comm_result_57
(2147483646) dxl_comm_result_17 <-> dxl_comm_result_77
(1) _25 <-> retval.0_26
(1) _34 <-> retval.1_35

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (dxl_comm_result_17 - 17 )
Partition 2 (_25 - 25 )
Partition 3 (retval.0_26 - 26 )
Partition 4 (_28 - 28 )
Partition 5 (_34 - 34 )
Partition 6 (retval.1_35 - 35 )
Partition 7 (_37 - 37 )
Partition 8 (dxl_comm_result_57 - 57 )
Partition 9 (dxl_comm_result_77 - 77 )

Coalesce list: (17)dxl_comm_result_17 & (57)dxl_comm_result_57 [map: 1, 8] : Success -> 1
Coalesce list: (17)dxl_comm_result_17 & (77)dxl_comm_result_77 [map: 1, 9] : Success -> 1
Coalesce list: (25)_25 & (26)retval.0_26 [map: 2, 3] : Success -> 2
Coalesce list: (34)_34 & (35)retval.1_35 [map: 5, 6] : Success -> 5
Coalesce list: (1)_1 & (37)_37 [map: 0, 7] : Success -> 0
Coalesce list: (1)_1 & (28)_28 [map: 0, 4] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 28 37 )
Partition 1 (_12 - 12 )
Partition 2 (portHandler_13 - 13 )
Partition 3 (_15 - 15 )
Partition 4 (packetHandler_16 - 16 )
Partition 5 (dxl_comm_result_17 - 17 57 77 )
Partition 6 (dxl_current_speed_20 - 20 )
Partition 7 (_21 - 21 )
Partition 8 (_22 - 22 )
Partition 9 (_23 - 23 )
Partition 10 (_25 - 25 26 )
Partition 11 (_30 - 30 )
Partition 12 (_31 - 31 )
Partition 13 (_32 - 32 )
Partition 14 (_34 - 34 35 )
Partition 15 (_40 - 40 )
Partition 16 (value_41 - 41 )
Partition 17 (i.2_42 - 42 )
Partition 18 (i.3_43 - 43 )
Partition 19 (i.4_45 - 45 )
Partition 20 (i.5_46 - 46 )
Partition 21 (_49 - 49 )
Partition 22 (_50 - 50 )
Partition 23 (_51 - 51 )
Partition 24 (i.6_52 - 52 )
Partition 25 (_53 - 53 )
Partition 26 (_54 - 54 )
Partition 27 (_56 - 56 )
Partition 28 (_58 - 58 )
Partition 29 (_59 - 59 )
Partition 30 (_60 - 60 )
Partition 31 (dxl_error.7_62 - 62 )
Partition 32 (_63 - 63 )
Partition 33 (_64 - 64 )
Partition 34 (_65 - 65 )
Partition 35 (dxl_error.8_66 - 66 )
Partition 36 (_67 - 67 )
Partition 37 (_69 - 69 )
Partition 38 (_70 - 70 )
Partition 39 (_71 - 71 )
Partition 40 (i.9_72 - 72 )
Partition 41 (_73 - 73 )
Partition 42 (_74 - 74 )
Partition 43 (_76 - 76 )
Partition 44 (_78 - 78 )
Partition 45 (_79 - 79 )
Partition 46 (_80 - 80 )
Partition 47 (dxl_error.10_82 - 82 )
Partition 48 (_83 - 83 )
Partition 49 (_84 - 84 )
Partition 50 (_85 - 85 )
Partition 51 (dxl_error.11_86 - 86 )
Partition 52 (_87 - 87 )
Partition 53 (dxl_present_position.12_89 - 89 )
Partition 54 (_90 - 90 )
Partition 55 (i.13_91 - 91 )
Partition 56 (_92 - 92 )

int main() ()
{
  int D.32815;
  int D.32814;
  int D.32813;
  bool D.32812;
  bool D.32811;
  struct PacketHandler * D.32810;
  struct PortHandler * D.32809;
  int value;
  uint16_t dxl_current_speed;
  uint16_t dxl_present_position;
  uint8_t dxl_error;
  int dxl_comm_result;
  struct PacketHandler * packetHandler;
  struct PortHandler * portHandler;
  int (*__vtbl_ptr_type) () D.32807;
  int (*__vtbl_ptr_type) () * D.32806;
  int (*__vtbl_ptr_type) () * D.32805;
  int D.32804;
  int i.13;
  int D.32802;
  short unsigned int dxl_present_position.12;
  int D.32795;
  unsigned char dxl_error.11;
  int (*__vtbl_ptr_type) () D.32793;
  int (*__vtbl_ptr_type) () * D.32792;
  int (*__vtbl_ptr_type) () * D.32791;
  unsigned char dxl_error.10;
  int (*__vtbl_ptr_type) () D.32786;
  int (*__vtbl_ptr_type) () * D.32785;
  int (*__vtbl_ptr_type) () * D.32784;
  int D.32781;
  int D.32780;
  int i.9;
  int (*__vtbl_ptr_type) () D.32778;
  int (*__vtbl_ptr_type) () * D.32777;
  int (*__vtbl_ptr_type) () * D.32776;
  int D.32774;
  unsigned char dxl_error.8;
  int (*__vtbl_ptr_type) () D.32772;
  int (*__vtbl_ptr_type) () * D.32771;
  int (*__vtbl_ptr_type) () * D.32770;
  unsigned char dxl_error.7;
  int (*__vtbl_ptr_type) () D.32765;
  int (*__vtbl_ptr_type) () * D.32764;
  int (*__vtbl_ptr_type) () * D.32763;
  int D.32760;
  int D.32759;
  int i.6;
  int (*__vtbl_ptr_type) () D.32757;
  int (*__vtbl_ptr_type) () * D.32756;
  int (*__vtbl_ptr_type) () * D.32755;
  int i.5;
  int i.4;
  int i.3;
  int i.2;
  int (*__vtbl_ptr_type) () D.32740;
  int (*__vtbl_ptr_type) () * D.32739;
  int (*__vtbl_ptr_type) () * D.32738;
  bool retval.1;
  int D.32736;
  int (*__vtbl_ptr_type) () D.32732;
  int (*__vtbl_ptr_type) () * D.32731;
  int (*__vtbl_ptr_type) () * D.32730;
  bool retval.0;
  int _1;
  struct PortHandler * _12;
  struct PacketHandler * _15;
  int (*__vtbl_ptr_type) () * _21;
  int (*__vtbl_ptr_type) () * _22;
  int (*__vtbl_ptr_type) () _23;
  bool _25;
  bool retval.0_26;
  int _28;
  int (*__vtbl_ptr_type) () * _30;
  int (*__vtbl_ptr_type) () * _31;
  int (*__vtbl_ptr_type) () _32;
  bool _34;
  bool retval.1_35;
  int _37;
  int _40;
  int i.2_42;
  int i.3_43;
  int i.4_45;
  int i.5_46;
  int (*__vtbl_ptr_type) () * _49;
  int (*__vtbl_ptr_type) () * _50;
  int (*__vtbl_ptr_type) () _51;
  int i.6_52;
  int _53;
  int _54;
  int _56;
  int (*__vtbl_ptr_type) () * _58;
  int (*__vtbl_ptr_type) () * _59;
  int (*__vtbl_ptr_type) () _60;
  unsigned char dxl_error.7_62;
  int (*__vtbl_ptr_type) () * _63;
  int (*__vtbl_ptr_type) () * _64;
  int (*__vtbl_ptr_type) () _65;
  unsigned char dxl_error.8_66;
  int _67;
  int (*__vtbl_ptr_type) () * _69;
  int (*__vtbl_ptr_type) () * _70;
  int (*__vtbl_ptr_type) () _71;
  int i.9_72;
  int _73;
  int _74;
  int _76;
  int (*__vtbl_ptr_type) () * _78;
  int (*__vtbl_ptr_type) () * _79;
  int (*__vtbl_ptr_type) () _80;
  unsigned char dxl_error.10_82;
  int (*__vtbl_ptr_type) () * _83;
  int (*__vtbl_ptr_type) () * _84;
  int (*__vtbl_ptr_type) () _85;
  unsigned char dxl_error.11_86;
  int _87;
  short unsigned int dxl_present_position.12_89;
  int _90;
  int i.13_91;
  int _92;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _12 = dynamixel::PortHandler::getPortHandler ("/dev/ttyUSB0");
  portHandler_13 = _12;
  _15 = dynamixel::PacketHandler::getPacketHandler (1.0e+0);
  packetHandler_16 = _15;
  dxl_comm_result_17 = -1001;
  dxl_error = 0;
  dxl_present_position = 0;
  dxl_current_speed_20 = 0;
  _21 = portHandler_13->_vptr.PortHandler;
  _22 = _21 + 16;
  _23 = *_22;
  _25 = OBJ_TYPE_REF(_23;(struct PortHandler)portHandler_13->2) (portHandler_13);
  retval.0_26 = _25;
  if (retval.0_26 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin_puts (&"Succeeded to open the port!"[0]);
  goto <bb 5>;
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  __builtin_puts (&"Failed to open the port!"[0]);
  _28 = 0;
  goto <bb 25>;
;;    succ:       25

;;   basic block 5, loop depth 0
;;    pred:       3
  _30 = portHandler_13->_vptr.PortHandler;
  _31 = _30 + 56;
  _32 = *_31;
  _34 = OBJ_TYPE_REF(_32;(struct PortHandler)portHandler_13->7) (portHandler_13, 1000000);
  retval.1_35 = _34;
  if (retval.1_35 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  __builtin_puts (&"Succeeded to change the baudrate!"[0]);
  goto <bb 8>;
;;    succ:       8

;;   basic block 7, loop depth 0
;;    pred:       5
  __builtin_puts (&"Failed to change the baudrate!"[0]);
  _37 = 0;
  goto <bb 25>;
;;    succ:       25

;;   basic block 8, loop depth 1
;;    pred:       6
;;                24
  _40 = getch ();
  value_41 = _40;
  if (value_41 == 119)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 1
;;    pred:       8
  i.2_42 = i;
  i.3_43 = i.2_42 + 1;
  i = i.3_43;
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       8
;;                9
  if (value_41 == 115)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11
;;                12

;;   basic block 11, loop depth 1
;;    pred:       10
  i.4_45 = i;
  i.5_46 = i.4_45 + -1;
  i = i.5_46;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       10
;;                11
  i = 0;
  _49 = packetHandler_16->_vptr.PacketHandler;
  _50 = _49 + 176;
  _51 = *_50;
  i.6_52 = i;
  _53 = dxl_ID[i.6_52];
  _54 = _53 & 255;
  _56 = OBJ_TYPE_REF(_51;(struct PacketHandler)packetHandler_16->22) (packetHandler_16, portHandler_13, _54, 36, &dxl_present_position, &dxl_error);
  dxl_comm_result_57 = _56;
  if (dxl_comm_result_57 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 1
;;    pred:       12
  _58 = packetHandler_16->_vptr.PacketHandler;
  _59 = _58 + 24;
  _60 = *_59;
  OBJ_TYPE_REF(_60;(struct PacketHandler)packetHandler_16->3) (packetHandler_16, dxl_comm_result_57);
  goto <bb 16>;
;;    succ:       16

;;   basic block 14, loop depth 1
;;    pred:       12
  dxl_error.7_62 = dxl_error;
  if (dxl_error.7_62 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15
;;                16

;;   basic block 15, loop depth 1
;;    pred:       14
  _63 = packetHandler_16->_vptr.PacketHandler;
  _64 = _63 + 32;
  _65 = *_64;
  dxl_error.8_66 = dxl_error;
  _67 = (int) dxl_error.8_66;
  OBJ_TYPE_REF(_65;(struct PacketHandler)packetHandler_16->4) (packetHandler_16, _67);
;;    succ:       16

;;   basic block 16, loop depth 1
;;    pred:       13
;;                14
;;                15
  _69 = packetHandler_16->_vptr.PacketHandler;
  _70 = _69 + 248;
  _71 = *_70;
  i.9_72 = i;
  _73 = dxl_ID[i.9_72];
  _74 = _73 & 255;
  _76 = OBJ_TYPE_REF(_71;(struct PacketHandler)packetHandler_16->31) (packetHandler_16, portHandler_13, _74, 32, 20, &dxl_error);
  dxl_comm_result_77 = _76;
  if (dxl_comm_result_77 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 1
;;    pred:       16
  _78 = packetHandler_16->_vptr.PacketHandler;
  _79 = _78 + 24;
  _80 = *_79;
  OBJ_TYPE_REF(_80;(struct PacketHandler)packetHandler_16->3) (packetHandler_16, dxl_comm_result_77);
  goto <bb 20>;
;;    succ:       20

;;   basic block 18, loop depth 1
;;    pred:       16
  dxl_error.10_82 = dxl_error;
  if (dxl_error.10_82 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19
;;                20

;;   basic block 19, loop depth 1
;;    pred:       18
  _83 = packetHandler_16->_vptr.PacketHandler;
  _84 = _83 + 32;
  _85 = *_84;
  dxl_error.11_86 = dxl_error;
  _87 = (int) dxl_error.11_86;
  OBJ_TYPE_REF(_85;(struct PacketHandler)packetHandler_16->4) (packetHandler_16, _87);
;;    succ:       20

;;   basic block 20, loop depth 1
;;    pred:       17
;;                18
;;                19
  if (value_41 == 119)
    goto <bb 23>;
  else
    goto <bb 21>;
;;    succ:       23
;;                21

;;   basic block 21, loop depth 1
;;    pred:       20
  if (value_41 == 115)
    goto <bb 23>;
  else
    goto <bb 22>;
;;    succ:       23
;;                22

;;   basic block 22, loop depth 1
;;    pred:       21
  if (value_41 == 122)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23
;;                24

;;   basic block 23, loop depth 1
;;    pred:       20
;;                21
;;                22
  dxl_present_position.12_89 = dxl_present_position;
  _90 = (int) dxl_present_position.12_89;
  i.13_91 = i;
  _92 = dxl_ID[i.13_91];
  printf ("ID: %d | Present Position: %03d\n", _92, _90);
;;    succ:       24

;;   basic block 24, loop depth 1
;;    pred:       22
;;                23
  goto <bb 8>;
;;    succ:       8

;;   basic block 25, loop depth 0
;;    pred:       4
;;                7
  # _1 = PHI <_28(4), _37(7)>
  dxl_error ={v} {CLOBBER};
  dxl_present_position ={v} {CLOBBER};
;;    succ:       26

;;   basic block 26, loop depth 0
;;    pred:       25
<L30>:
  return _1;
;;    succ:       EXIT

}


Partition 1: size 8 align 8
	packetHandler_16
Partition 0: size 8 align 8
	portHandler_13
Partition 4: size 4 align 4
	value_41
Partition 2: size 4 align 4
	dxl_comm_result_17
Partition 3: size 2 align 2
	dxl_current_speed_20
Partition 6: size 2 align 2
	dxl_present_position
Partition 5: size 1 align 1
	dxl_error

;; Generating RTL for gimple basic block 2

;; _12 = dynamixel::PortHandler::getPortHandler ("/dev/ttyUSB0");

(insn 6 5 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f2141513120 *.LC0>)) read_motor_position.cpp:72 -1
     (nil))

(call_insn 7 6 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN9dynamixel11PortHandler14getPortHandlerEPKc") [flags 0x41]  <function_decl 0x7f2141603870 getPortHandler>) [0 getPortHandler S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 8 7 0 (set (reg/f:DI 88 [ D.32834 ])
        (reg:DI 0 ax)) read_motor_position.cpp:72 -1
     (nil))

;; portHandler_13 = _12;

(insn 9 8 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])
        (reg/f:DI 88 [ D.32834 ])) read_motor_position.cpp:72 -1
     (nil))

;; _15 = dynamixel::PacketHandler::getPacketHandler (1.0e+0);

(insn 10 9 11 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) read_motor_position.cpp:77 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(call_insn 11 10 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN9dynamixel13PacketHandler16getPacketHandlerEf") [flags 0x41]  <function_decl 0x7f2141648870 getPacketHandler>) [0 getPacketHandler S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:77 -1
     (nil)
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 12 11 0 (set (reg/f:DI 89 [ D.32835 ])
        (reg:DI 0 ax)) read_motor_position.cpp:77 -1
     (nil))

;; packetHandler_16 = _15;

(insn 13 12 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])
        (reg/f:DI 89 [ D.32835 ])) read_motor_position.cpp:77 -1
     (nil))

;; dxl_comm_result_17 = -1001;

(insn 14 13 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])
        (const_int -1001 [0xfffffffffffffc17])) read_motor_position.cpp:79 -1
     (nil))

;; dxl_error = 0;

(insn 15 14 0 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -37 [0xffffffffffffffdb])) [0 dxl_error+0 S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:80 -1
     (nil))

;; dxl_present_position = 0;

(insn 16 15 0 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 dxl_present_position+0 S2 A32])
        (const_int 0 [0])) read_motor_position.cpp:81 -1
     (nil))

;; dxl_current_speed_20 = 0;

(insn 17 16 0 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -34 [0xffffffffffffffde])) [0 dxl_current_speed+0 S2 A16])
        (const_int 0 [0])) read_motor_position.cpp:82 -1
     (nil))

;; _21 = portHandler_13->_vptr.PortHandler;

(insn 18 17 19 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:86 -1
     (nil))

(insn 19 18 0 (set (reg/f:DI 90 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 140) [0 portHandler_13->_vptr.PortHandler+0 S8 A64])) read_motor_position.cpp:86 -1
     (nil))

;; _22 = _21 + 16;

(insn 20 19 0 (parallel [
            (set (reg/f:DI 91 [ D.32836 ])
                (plus:DI (reg/f:DI 90 [ D.32836 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:86 -1
     (nil))

;; _23 = *_22;

(insn 21 20 0 (set (reg/f:DI 92 [ D.32837 ])
        (mem/f:DI (reg/f:DI 91 [ D.32836 ]) [0 *_22+0 S8 A64])) read_motor_position.cpp:86 -1
     (nil))

;; _25 = OBJ_TYPE_REF(_23;portHandler_13->2) (portHandler_13);

(insn 22 21 23 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:86 -1
     (nil))

(insn 23 22 24 (set (reg:DI 5 di)
        (reg:DI 141)) read_motor_position.cpp:86 -1
     (nil))

(call_insn 24 23 25 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 92 [ D.32837 ]) [0 *OBJ_TYPE_REF(_23;(struct PortHandler)portHandler_13->2) S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:86 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 25 24 0 (set (reg:QI 93 [ D.32838 ])
        (reg:QI 0 ax)) read_motor_position.cpp:86 -1
     (nil))

;; _26 = _25;

(nil)

;; if (_26 != 0)

(insn 26 25 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ D.32838 ])
            (const_int 0 [0]))) read_motor_position.cpp:86 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:86 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; __builtin_puts (&"Succeeded to open the port!"[0]);

(insn 29 28 30 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f21415131b0 *.LC2>)) read_motor_position.cpp:88 -1
     (nil))

(call_insn 30 29 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2142d8f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:88 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 33 32 34 5 "" [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_puts (&"Failed to open the port!"[0]);

(insn 35 34 36 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f2141513240 *.LC3>)) read_motor_position.cpp:92 -1
     (nil))

(call_insn 36 35 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2142d8f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:92 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _28 = 0;

(insn 37 36 0 (set (reg:SI 87 [ D.32833 ])
        (const_int 0 [0])) read_motor_position.cpp:93 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 40 39 41 6 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; _30 = portHandler_13->_vptr.PortHandler;

(insn 42 41 43 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:97 -1
     (nil))

(insn 43 42 0 (set (reg/f:DI 94 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 142) [0 portHandler_13->_vptr.PortHandler+0 S8 A64])) read_motor_position.cpp:97 -1
     (nil))

;; _31 = _30 + 56;

(insn 44 43 0 (parallel [
            (set (reg/f:DI 95 [ D.32836 ])
                (plus:DI (reg/f:DI 94 [ D.32836 ])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:97 -1
     (nil))

;; _32 = *_31;

(insn 45 44 0 (set (reg/f:DI 96 [ D.32837 ])
        (mem/f:DI (reg/f:DI 95 [ D.32836 ]) [0 *_31+0 S8 A64])) read_motor_position.cpp:97 -1
     (nil))

;; _34 = OBJ_TYPE_REF(_32;portHandler_13->7) (portHandler_13, 1000000);

(insn 46 45 47 (set (reg:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:97 -1
     (nil))

(insn 47 46 48 (set (reg:SI 4 si)
        (const_int 1000000 [0xf4240])) read_motor_position.cpp:97 -1
     (nil))

(insn 48 47 49 (set (reg:DI 5 di)
        (reg:DI 143)) read_motor_position.cpp:97 -1
     (nil))

(call_insn 49 48 50 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 96 [ D.32837 ]) [0 *OBJ_TYPE_REF(_32;(struct PortHandler)portHandler_13->7) S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:97 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 50 49 0 (set (reg:QI 97 [ D.32838 ])
        (reg:QI 0 ax)) read_motor_position.cpp:97 -1
     (nil))

;; _35 = _34;

(nil)

;; if (_35 != 0)

(insn 51 50 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ D.32838 ])
            (const_int 0 [0]))) read_motor_position.cpp:97 -1
     (nil))

(jump_insn 52 51 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:97 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; __builtin_puts (&"Succeeded to change the baudrate!"[0]);

(insn 54 53 55 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f21415132d0 *.LC4>)) read_motor_position.cpp:99 -1
     (nil))

(call_insn 55 54 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2142d8f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:99 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 7

;; 

(code_label 58 57 59 8 "" [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_puts (&"Failed to change the baudrate!"[0]);

(insn 60 59 61 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f2141513360 *.LC5>)) read_motor_position.cpp:103 -1
     (nil))

(call_insn 61 60 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2142d8f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:103 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _37 = 0;

(insn 62 61 0 (set (reg:SI 87 [ D.32833 ])
        (const_int 0 [0])) read_motor_position.cpp:104 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 65 64 66 9 "" [0 uses])

(note 66 65 0 NOTE_INSN_BASIC_BLOCK)

;; _40 = getch ();

(call_insn 67 66 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z5getchv") [flags 0x3]  <function_decl 0x7f21414456c0 getch>) [0 getch S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:110 -1
     (nil)
    (nil))

(insn 68 67 0 (set (reg:SI 98 [ D.32833 ])
        (reg:SI 0 ax)) read_motor_position.cpp:110 -1
     (nil))

;; value_41 = _40;

(insn 69 68 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
        (reg:SI 98 [ D.32833 ])) read_motor_position.cpp:110 -1
     (nil))

;; if (value_41 == 119)

(insn 70 69 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
            (const_int 119 [0x77]))) read_motor_position.cpp:111 -1
     (nil))

(jump_insn 71 70 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:111 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _42 = i;

(insn 73 72 0 (set (reg:SI 99 [ D.32833 ])
        (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])) read_motor_position.cpp:112 -1
     (nil))

;; _43 = _42 + 1;

(insn 74 73 0 (parallel [
            (set (reg:SI 100 [ D.32833 ])
                (plus:SI (reg:SI 99 [ D.32833 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:112 -1
     (nil))

;; i = _43;

(insn 75 74 0 (set (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])
        (reg:SI 100 [ D.32833 ])) read_motor_position.cpp:112 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 76 75 77 10 "" [0 uses])

(note 77 76 0 NOTE_INSN_BASIC_BLOCK)

;; if (value_41 == 115)

(insn 78 77 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
            (const_int 115 [0x73]))) read_motor_position.cpp:113 -1
     (nil))

(jump_insn 79 78 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:113 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _45 = i;

(insn 81 80 0 (set (reg:SI 101 [ D.32833 ])
        (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])) read_motor_position.cpp:114 -1
     (nil))

;; _46 = _45 + -1;

(insn 82 81 0 (parallel [
            (set (reg:SI 102 [ D.32833 ])
                (plus:SI (reg:SI 101 [ D.32833 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:114 -1
     (nil))

;; i = _46;

(insn 83 82 0 (set (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])
        (reg:SI 102 [ D.32833 ])) read_motor_position.cpp:114 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 84 83 85 11 "" [0 uses])

(note 85 84 0 NOTE_INSN_BASIC_BLOCK)

;; i = 0;

(insn 86 85 0 (set (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])
        (const_int 0 [0])) read_motor_position.cpp:116 -1
     (nil))

;; _49 = packetHandler_16->_vptr.PacketHandler;

(insn 87 86 88 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:118 -1
     (nil))

(insn 88 87 0 (set (reg/f:DI 103 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 144) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:118 -1
     (nil))

;; _50 = _49 + 176;

(insn 89 88 0 (parallel [
            (set (reg/f:DI 104 [ D.32836 ])
                (plus:DI (reg/f:DI 103 [ D.32836 ])
                    (const_int 176 [0xb0])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:118 -1
     (nil))

;; _51 = *_50;

(insn 90 89 0 (set (reg/f:DI 105 [ D.32837 ])
        (mem/f:DI (reg/f:DI 104 [ D.32836 ]) [0 *_50+0 S8 A64])) read_motor_position.cpp:118 -1
     (nil))

;; _52 = i;

(insn 91 90 0 (set (reg:SI 106 [ D.32833 ])
        (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])) read_motor_position.cpp:118 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _53 = dxl_ID[_52];

(insn 92 91 93 (set (reg:DI 145)
        (sign_extend:DI (reg:SI 106 [ D.32833 ]))) read_motor_position.cpp:118 -1
     (nil))

(insn 93 92 0 (set (reg:SI 107 [ D.32833 ])
        (mem/j:SI (plus:DI (mult:DI (reg:DI 145)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("dxl_ID") [flags 0x2]  <var_decl 0x7f214143cea0 dxl_ID>)) [0 dxl_ID S4 A32])) read_motor_position.cpp:118 -1
     (nil))

;; _54 = _53 & 255;

(insn 94 93 0 (set (reg:SI 108 [ D.32833 ])
        (zero_extend:SI (subreg:QI (reg:SI 107 [ D.32833 ]) 0))) read_motor_position.cpp:118 -1
     (nil))

;; _56 = OBJ_TYPE_REF(_51;packetHandler_16->22) (packetHandler_16, portHandler_13, _54, 36, &dxl_present_position, &dxl_error);

(insn 95 94 96 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -37 [0xffffffffffffffdb])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:118 -1
     (nil))

(insn 96 95 97 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:118 -1
     (nil))

(insn 97 96 98 (set (reg:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:118 -1
     (nil))

(insn 98 97 99 (set (reg:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:118 -1
     (nil))

(insn 99 98 100 (set (reg:DI 38 r9)
        (reg:DI 146)) read_motor_position.cpp:118 -1
     (nil))

(insn 100 99 101 (set (reg:DI 37 r8)
        (reg:DI 147)) read_motor_position.cpp:118 -1
     (nil))

(insn 101 100 102 (set (reg:SI 2 cx)
        (const_int 36 [0x24])) read_motor_position.cpp:118 -1
     (nil))

(insn 102 101 103 (set (reg:SI 1 dx)
        (reg:SI 108 [ D.32833 ])) read_motor_position.cpp:118 -1
     (nil))

(insn 103 102 104 (set (reg:DI 4 si)
        (reg:DI 148)) read_motor_position.cpp:118 -1
     (nil))

(insn 104 103 105 (set (reg:DI 5 di)
        (reg:DI 149)) read_motor_position.cpp:118 -1
     (nil))

(call_insn 105 104 106 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 105 [ D.32837 ]) [0 *OBJ_TYPE_REF(_51;(struct PacketHandler)packetHandler_16->22) S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:118 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))

(insn 106 105 0 (set (reg:SI 109 [ D.32833 ])
        (reg:SI 0 ax)) read_motor_position.cpp:118 -1
     (nil))

;; dxl_comm_result_57 = _56;

(insn 107 106 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])
        (reg:SI 109 [ D.32833 ])) read_motor_position.cpp:118 -1
     (nil))

;; if (dxl_comm_result_57 != 0)

(insn 108 107 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])
            (const_int 0 [0]))) read_motor_position.cpp:119 -1
     (nil))

(jump_insn 109 108 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:119 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; _58 = packetHandler_16->_vptr.PacketHandler;

(insn 111 110 112 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:121 -1
     (nil))

(insn 112 111 0 (set (reg/f:DI 110 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 150) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:121 -1
     (nil))

;; _59 = _58 + 24;

(insn 113 112 0 (parallel [
            (set (reg/f:DI 111 [ D.32836 ])
                (plus:DI (reg/f:DI 110 [ D.32836 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:121 -1
     (nil))

;; _60 = *_59;

(insn 114 113 0 (set (reg/f:DI 112 [ D.32837 ])
        (mem/f:DI (reg/f:DI 111 [ D.32836 ]) [0 *_59+0 S8 A64])) read_motor_position.cpp:121 -1
     (nil))

;; OBJ_TYPE_REF(_60;packetHandler_16->3) (packetHandler_16, dxl_comm_result_57);

(insn 115 114 116 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])) read_motor_position.cpp:121 -1
     (nil))

(insn 116 115 117 (set (reg:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:121 -1
     (nil))

(insn 117 116 118 (set (reg:SI 4 si)
        (reg:SI 151)) read_motor_position.cpp:121 -1
     (nil))

(insn 118 117 119 (set (reg:DI 5 di)
        (reg:DI 152)) read_motor_position.cpp:121 -1
     (nil))

(call_insn 119 118 0 (call (mem:QI (reg/f:DI 112 [ D.32837 ]) [0 *OBJ_TYPE_REF(_60;(struct PacketHandler)packetHandler_16->3) S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:121 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 14

;; 

(code_label 122 121 123 12 "" [0 uses])

(note 123 122 0 NOTE_INSN_BASIC_BLOCK)

;; _62 = dxl_error;

(insn 124 123 0 (set (reg:QI 113 [ D.32839 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -37 [0xffffffffffffffdb])) [0 dxl_error+0 S1 A8])) read_motor_position.cpp:123 -1
     (nil))

;; if (_62 != 0)

(insn 125 124 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ D.32839 ])
            (const_int 0 [0]))) read_motor_position.cpp:123 -1
     (nil))

(jump_insn 126 125 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:123 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; _63 = packetHandler_16->_vptr.PacketHandler;

(insn 128 127 129 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:125 -1
     (nil))

(insn 129 128 0 (set (reg/f:DI 114 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 153) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:125 -1
     (nil))

;; _64 = _63 + 32;

(insn 130 129 0 (parallel [
            (set (reg/f:DI 115 [ D.32836 ])
                (plus:DI (reg/f:DI 114 [ D.32836 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:125 -1
     (nil))

;; _65 = *_64;

(insn 131 130 0 (set (reg/f:DI 116 [ D.32837 ])
        (mem/f:DI (reg/f:DI 115 [ D.32836 ]) [0 *_64+0 S8 A64])) read_motor_position.cpp:125 -1
     (nil))

;; _66 = dxl_error;

(insn 132 131 0 (set (reg:QI 117 [ D.32839 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -37 [0xffffffffffffffdb])) [0 dxl_error+0 S1 A8])) read_motor_position.cpp:125 -1
     (nil))

;; _67 = (int) _66;

(insn 133 132 0 (set (reg:SI 118 [ D.32833 ])
        (zero_extend:SI (reg:QI 117 [ D.32839 ]))) read_motor_position.cpp:125 -1
     (nil))

;; OBJ_TYPE_REF(_65;packetHandler_16->4) (packetHandler_16, _67);

(insn 134 133 135 (set (reg:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:125 -1
     (nil))

(insn 135 134 136 (set (reg:SI 4 si)
        (reg:SI 118 [ D.32833 ])) read_motor_position.cpp:125 -1
     (nil))

(insn 136 135 137 (set (reg:DI 5 di)
        (reg:DI 154)) read_motor_position.cpp:125 -1
     (nil))

(call_insn 137 136 0 (call (mem:QI (reg/f:DI 116 [ D.32837 ]) [0 *OBJ_TYPE_REF(_65;(struct PacketHandler)packetHandler_16->4) S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:125 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 16

;; 

(code_label 138 137 139 13 "" [0 uses])

(note 139 138 0 NOTE_INSN_BASIC_BLOCK)

;; _69 = packetHandler_16->_vptr.PacketHandler;

(insn 140 139 141 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:128 -1
     (nil))

(insn 141 140 0 (set (reg/f:DI 119 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 155) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:128 -1
     (nil))

;; _70 = _69 + 248;

(insn 142 141 0 (parallel [
            (set (reg/f:DI 120 [ D.32836 ])
                (plus:DI (reg/f:DI 119 [ D.32836 ])
                    (const_int 248 [0xf8])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:128 -1
     (nil))

;; _71 = *_70;

(insn 143 142 0 (set (reg/f:DI 121 [ D.32837 ])
        (mem/f:DI (reg/f:DI 120 [ D.32836 ]) [0 *_70+0 S8 A64])) read_motor_position.cpp:128 -1
     (nil))

;; _72 = i;

(insn 144 143 0 (set (reg:SI 122 [ D.32833 ])
        (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])) read_motor_position.cpp:128 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _73 = dxl_ID[_72];

(insn 145 144 146 (set (reg:DI 156)
        (sign_extend:DI (reg:SI 122 [ D.32833 ]))) read_motor_position.cpp:128 -1
     (nil))

(insn 146 145 0 (set (reg:SI 123 [ D.32833 ])
        (mem/j:SI (plus:DI (mult:DI (reg:DI 156)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("dxl_ID") [flags 0x2]  <var_decl 0x7f214143cea0 dxl_ID>)) [0 dxl_ID S4 A32])) read_motor_position.cpp:128 -1
     (nil))

;; _74 = _73 & 255;

(insn 147 146 0 (set (reg:SI 124 [ D.32833 ])
        (zero_extend:SI (subreg:QI (reg:SI 123 [ D.32833 ]) 0))) read_motor_position.cpp:128 -1
     (nil))

;; _76 = OBJ_TYPE_REF(_71;packetHandler_16->31) (packetHandler_16, portHandler_13, _74, 32, 20, &dxl_error);

(insn 148 147 149 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -37 [0xffffffffffffffdb])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:128 -1
     (nil))

(insn 149 148 150 (set (reg:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:128 -1
     (nil))

(insn 150 149 151 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:128 -1
     (nil))

(insn 151 150 152 (set (reg:DI 38 r9)
        (reg:DI 157)) read_motor_position.cpp:128 -1
     (nil))

(insn 152 151 153 (set (reg:SI 37 r8)
        (const_int 20 [0x14])) read_motor_position.cpp:128 -1
     (nil))

(insn 153 152 154 (set (reg:SI 2 cx)
        (const_int 32 [0x20])) read_motor_position.cpp:128 -1
     (nil))

(insn 154 153 155 (set (reg:SI 1 dx)
        (reg:SI 124 [ D.32833 ])) read_motor_position.cpp:128 -1
     (nil))

(insn 155 154 156 (set (reg:DI 4 si)
        (reg:DI 158)) read_motor_position.cpp:128 -1
     (nil))

(insn 156 155 157 (set (reg:DI 5 di)
        (reg:DI 159)) read_motor_position.cpp:128 -1
     (nil))

(call_insn 157 156 158 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 121 [ D.32837 ]) [0 *OBJ_TYPE_REF(_71;(struct PacketHandler)packetHandler_16->31) S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:128 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))

(insn 158 157 0 (set (reg:SI 125 [ D.32833 ])
        (reg:SI 0 ax)) read_motor_position.cpp:128 -1
     (nil))

;; dxl_comm_result_77 = _76;

(insn 159 158 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])
        (reg:SI 125 [ D.32833 ])) read_motor_position.cpp:128 -1
     (nil))

;; if (dxl_comm_result_77 != 0)

(insn 160 159 161 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])
            (const_int 0 [0]))) read_motor_position.cpp:129 -1
     (nil))

(jump_insn 161 160 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:129 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; _78 = packetHandler_16->_vptr.PacketHandler;

(insn 163 162 164 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:131 -1
     (nil))

(insn 164 163 0 (set (reg/f:DI 126 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 160) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:131 -1
     (nil))

;; _79 = _78 + 24;

(insn 165 164 0 (parallel [
            (set (reg/f:DI 127 [ D.32836 ])
                (plus:DI (reg/f:DI 126 [ D.32836 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:131 -1
     (nil))

;; _80 = *_79;

(insn 166 165 0 (set (reg/f:DI 128 [ D.32837 ])
        (mem/f:DI (reg/f:DI 127 [ D.32836 ]) [0 *_79+0 S8 A64])) read_motor_position.cpp:131 -1
     (nil))

;; OBJ_TYPE_REF(_80;packetHandler_16->3) (packetHandler_16, dxl_comm_result_77);

(insn 167 166 168 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])) read_motor_position.cpp:131 -1
     (nil))

(insn 168 167 169 (set (reg:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:131 -1
     (nil))

(insn 169 168 170 (set (reg:SI 4 si)
        (reg:SI 161)) read_motor_position.cpp:131 -1
     (nil))

(insn 170 169 171 (set (reg:DI 5 di)
        (reg:DI 162)) read_motor_position.cpp:131 -1
     (nil))

(call_insn 171 170 0 (call (mem:QI (reg/f:DI 128 [ D.32837 ]) [0 *OBJ_TYPE_REF(_80;(struct PacketHandler)packetHandler_16->3) S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:131 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 18

;; 

(code_label 174 173 175 14 "" [0 uses])

(note 175 174 0 NOTE_INSN_BASIC_BLOCK)

;; _82 = dxl_error;

(insn 176 175 0 (set (reg:QI 129 [ D.32839 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -37 [0xffffffffffffffdb])) [0 dxl_error+0 S1 A8])) read_motor_position.cpp:133 -1
     (nil))

;; if (_82 != 0)

(insn 177 176 178 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ D.32839 ])
            (const_int 0 [0]))) read_motor_position.cpp:133 -1
     (nil))

(jump_insn 178 177 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:133 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; _83 = packetHandler_16->_vptr.PacketHandler;

(insn 180 179 181 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:135 -1
     (nil))

(insn 181 180 0 (set (reg/f:DI 130 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 163) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:135 -1
     (nil))

;; _84 = _83 + 32;

(insn 182 181 0 (parallel [
            (set (reg/f:DI 131 [ D.32836 ])
                (plus:DI (reg/f:DI 130 [ D.32836 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:135 -1
     (nil))

;; _85 = *_84;

(insn 183 182 0 (set (reg/f:DI 132 [ D.32837 ])
        (mem/f:DI (reg/f:DI 131 [ D.32836 ]) [0 *_84+0 S8 A64])) read_motor_position.cpp:135 -1
     (nil))

;; _86 = dxl_error;

(insn 184 183 0 (set (reg:QI 133 [ D.32839 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -37 [0xffffffffffffffdb])) [0 dxl_error+0 S1 A8])) read_motor_position.cpp:135 -1
     (nil))

;; _87 = (int) _86;

(insn 185 184 0 (set (reg:SI 134 [ D.32833 ])
        (zero_extend:SI (reg:QI 133 [ D.32839 ]))) read_motor_position.cpp:135 -1
     (nil))

;; OBJ_TYPE_REF(_85;packetHandler_16->4) (packetHandler_16, _87);

(insn 186 185 187 (set (reg:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:135 -1
     (nil))

(insn 187 186 188 (set (reg:SI 4 si)
        (reg:SI 134 [ D.32833 ])) read_motor_position.cpp:135 -1
     (nil))

(insn 188 187 189 (set (reg:DI 5 di)
        (reg:DI 164)) read_motor_position.cpp:135 -1
     (nil))

(call_insn 189 188 0 (call (mem:QI (reg/f:DI 132 [ D.32837 ]) [0 *OBJ_TYPE_REF(_85;(struct PacketHandler)packetHandler_16->4) S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:135 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 20

;; 

(code_label 190 189 191 15 "" [0 uses])

(note 191 190 0 NOTE_INSN_BASIC_BLOCK)

;; if (value_41 == 119)

(insn 192 191 193 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
            (const_int 119 [0x77]))) read_motor_position.cpp:139 -1
     (nil))

(jump_insn 193 192 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:139 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; if (value_41 == 115)

(insn 195 194 196 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
            (const_int 115 [0x73]))) read_motor_position.cpp:139 -1
     (nil))

(jump_insn 196 195 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:139 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; if (value_41 == 122)

(insn 198 197 199 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
            (const_int 122 [0x7a]))) read_motor_position.cpp:139 -1
     (nil))

(jump_insn 199 198 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:139 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 200 199 201 16 "" [0 uses])

(note 201 200 0 NOTE_INSN_BASIC_BLOCK)

;; _89 = dxl_present_position;

(insn 202 201 0 (set (reg:HI 135 [ D.32840 ])
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 dxl_present_position+0 S2 A32])) read_motor_position.cpp:140 -1
     (nil))

;; _90 = (int) _89;

(insn 203 202 0 (set (reg:SI 136 [ D.32833 ])
        (zero_extend:SI (reg:HI 135 [ D.32840 ]))) read_motor_position.cpp:140 -1
     (nil))

;; _91 = i;

(insn 204 203 0 (set (reg:SI 137 [ D.32833 ])
        (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])) read_motor_position.cpp:140 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _92 = dxl_ID[_91];

(insn 205 204 206 (set (reg:DI 165)
        (sign_extend:DI (reg:SI 137 [ D.32833 ]))) read_motor_position.cpp:140 -1
     (nil))

(insn 206 205 0 (set (reg:SI 138 [ D.32833 ])
        (mem/j:SI (plus:DI (mult:DI (reg:DI 165)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("dxl_ID") [flags 0x2]  <var_decl 0x7f214143cea0 dxl_ID>)) [0 dxl_ID S4 A32])) read_motor_position.cpp:140 -1
     (nil))

;; printf ("ID: %d | Present Position: %03d\n", _92, _90);

(insn 207 206 208 (set (reg:SI 1 dx)
        (reg:SI 136 [ D.32833 ])) read_motor_position.cpp:140 -1
     (nil))

(insn 208 207 209 (set (reg:SI 4 si)
        (reg:SI 138 [ D.32833 ])) read_motor_position.cpp:140 -1
     (nil))

(insn 209 208 210 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f21415133f0 *.LC6>)) read_motor_position.cpp:140 -1
     (nil))

(insn 210 209 211 (set (reg:QI 0 ax)
        (const_int 0 [0])) read_motor_position.cpp:140 -1
     (nil))

(call_insn 211 210 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2142d8e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:140 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))

;; Generating RTL for gimple basic block 24

;; 

(code_label 212 211 213 17 "" [0 uses])

(note 213 212 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 25

;; 

(code_label 216 215 217 7 "" [0 uses])

(note 217 216 0 NOTE_INSN_BASIC_BLOCK)

;; dxl_error ={v} {CLOBBER};

(nil)

;; dxl_present_position ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 26

;; <L30>:

(code_label 218 217 219 18 "" [0 uses])

(note 219 218 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 220 219 221 (set (reg:SI 139 [ <retval> ])
        (reg:SI 87 [ D.32833 ])) -1
     (nil))

(jump_insn 221 220 222 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 222 221 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 38 from 26 to 27.
Redirecting jump 63 from 26 to 27.
deleting block 26
Removing jump 221.
Merging block 28 into block 27...
Merged blocks 27 and 28.
Merged 27 and 28 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.32841+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:68 -1
     (nil))
(insn 6 3 7 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f2141513120 *.LC0>)) read_motor_position.cpp:72 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN9dynamixel11PortHandler14getPortHandlerEPKc") [flags 0x41]  <function_decl 0x7f2141603870 getPortHandler>) [0 getPortHandler S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 88 [ D.32834 ])
        (reg:DI 0 ax)) read_motor_position.cpp:72 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])
        (reg/f:DI 88 [ D.32834 ])) read_motor_position.cpp:72 -1
     (nil))
(insn 10 9 11 2 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) read_motor_position.cpp:77 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN9dynamixel13PacketHandler16getPacketHandlerEf") [flags 0x41]  <function_decl 0x7f2141648870 getPacketHandler>) [0 getPacketHandler S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:77 -1
     (nil)
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 89 [ D.32835 ])
        (reg:DI 0 ax)) read_motor_position.cpp:77 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])
        (reg/f:DI 89 [ D.32835 ])) read_motor_position.cpp:77 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])
        (const_int -1001 [0xfffffffffffffc17])) read_motor_position.cpp:79 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -37 [0xffffffffffffffdb])) [0 dxl_error+0 S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:80 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 dxl_present_position+0 S2 A32])
        (const_int 0 [0])) read_motor_position.cpp:81 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -34 [0xffffffffffffffde])) [0 dxl_current_speed+0 S2 A16])
        (const_int 0 [0])) read_motor_position.cpp:82 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:86 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 90 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 140) [0 portHandler_13->_vptr.PortHandler+0 S8 A64])) read_motor_position.cpp:86 -1
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg/f:DI 91 [ D.32836 ])
                (plus:DI (reg/f:DI 90 [ D.32836 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:86 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 92 [ D.32837 ])
        (mem/f:DI (reg/f:DI 91 [ D.32836 ]) [0 *_22+0 S8 A64])) read_motor_position.cpp:86 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:86 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg:DI 141)) read_motor_position.cpp:86 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 92 [ D.32837 ]) [0 *OBJ_TYPE_REF(_23;(struct PortHandler)portHandler_13->2) S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:86 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:QI 93 [ D.32838 ])
        (reg:QI 0 ax)) read_motor_position.cpp:86 -1
     (nil))
(insn 26 25 27 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ D.32838 ])
            (const_int 0 [0]))) read_motor_position.cpp:86 -1
     (nil))
(jump_insn 27 26 28 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) read_motor_position.cpp:86 -1
     (nil)
 -> 33)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f21415131b0 *.LC2>)) read_motor_position.cpp:88 -1
     (nil))
(call_insn 30 29 31 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2142d8f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:88 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 31 30 32 4 (set (pc)
        (label_ref 40)) -1
     (nil)
 -> 40)
;;  succ:       6

(barrier 32 31 33)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
(code_label 33 32 34 5 5 "" [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f2141513240 *.LC3>)) read_motor_position.cpp:92 -1
     (nil))
(call_insn 36 35 37 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2142d8f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:92 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 5 (set (reg:SI 87 [ D.32833 ])
        (const_int 0 [0])) read_motor_position.cpp:93 -1
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (label_ref:DI 218)) read_motor_position.cpp:93 654 {jump}
     (nil)
 -> 218)
;;  succ:       27 [100.0%] 

(barrier 39 38 40)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 40 39 41 6 6 "" [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:97 -1
     (nil))
(insn 43 42 44 6 (set (reg/f:DI 94 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 142) [0 portHandler_13->_vptr.PortHandler+0 S8 A64])) read_motor_position.cpp:97 -1
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg/f:DI 95 [ D.32836 ])
                (plus:DI (reg/f:DI 94 [ D.32836 ])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:97 -1
     (nil))
(insn 45 44 46 6 (set (reg/f:DI 96 [ D.32837 ])
        (mem/f:DI (reg/f:DI 95 [ D.32836 ]) [0 *_31+0 S8 A64])) read_motor_position.cpp:97 -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:97 -1
     (nil))
(insn 47 46 48 6 (set (reg:SI 4 si)
        (const_int 1000000 [0xf4240])) read_motor_position.cpp:97 -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 5 di)
        (reg:DI 143)) read_motor_position.cpp:97 -1
     (nil))
(call_insn 49 48 50 6 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 96 [ D.32837 ]) [0 *OBJ_TYPE_REF(_32;(struct PortHandler)portHandler_13->7) S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:97 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 50 49 51 6 (set (reg:QI 97 [ D.32838 ])
        (reg:QI 0 ax)) read_motor_position.cpp:97 -1
     (nil))
(insn 51 50 52 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ D.32838 ])
            (const_int 0 [0]))) read_motor_position.cpp:97 -1
     (nil))
(jump_insn 52 51 53 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) read_motor_position.cpp:97 -1
     (nil)
 -> 58)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f21415132d0 *.LC4>)) read_motor_position.cpp:99 -1
     (nil))
(call_insn 55 54 56 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2142d8f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:99 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 56 55 57 7 (set (pc)
        (label_ref 65)) -1
     (nil)
 -> 65)
;;  succ:       9

(barrier 57 56 58)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
(code_label 58 57 59 8 8 "" [1 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f2141513360 *.LC5>)) read_motor_position.cpp:103 -1
     (nil))
(call_insn 61 60 62 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2142d8f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:103 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 62 61 63 8 (set (reg:SI 87 [ D.32833 ])
        (const_int 0 [0])) read_motor_position.cpp:104 -1
     (nil))
(jump_insn 63 62 64 8 (set (pc)
        (label_ref:DI 218)) read_motor_position.cpp:104 654 {jump}
     (nil)
 -> 218)
;;  succ:       27 [100.0%] 

(barrier 64 63 65)
;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              25 (DFS_BACK)
(code_label 65 64 66 9 9 "" [2 uses])
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 67 66 68 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z5getchv") [flags 0x3]  <function_decl 0x7f21414456c0 getch>) [0 getch S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:110 -1
     (nil)
    (nil))
(insn 68 67 69 9 (set (reg:SI 98 [ D.32833 ])
        (reg:SI 0 ax)) read_motor_position.cpp:110 -1
     (nil))
(insn 69 68 70 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
        (reg:SI 98 [ D.32833 ])) read_motor_position.cpp:110 -1
     (nil))
(insn 70 69 71 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
            (const_int 119 [0x77]))) read_motor_position.cpp:111 -1
     (nil))
(jump_insn 71 70 72 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) read_motor_position.cpp:111 -1
     (nil)
 -> 76)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 10 (set (reg:SI 99 [ D.32833 ])
        (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])) read_motor_position.cpp:112 -1
     (nil))
(insn 74 73 75 10 (parallel [
            (set (reg:SI 100 [ D.32833 ])
                (plus:SI (reg:SI 99 [ D.32833 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:112 -1
     (nil))
(insn 75 74 76 10 (set (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])
        (reg:SI 100 [ D.32833 ])) read_motor_position.cpp:112 -1
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU)
(code_label 76 75 77 11 10 "" [1 uses])
(note 77 76 78 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
            (const_int 115 [0x73]))) read_motor_position.cpp:113 -1
     (nil))
(jump_insn 79 78 80 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) read_motor_position.cpp:113 -1
     (nil)
 -> 84)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 12 (set (reg:SI 101 [ D.32833 ])
        (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])) read_motor_position.cpp:114 -1
     (nil))
(insn 82 81 83 12 (parallel [
            (set (reg:SI 102 [ D.32833 ])
                (plus:SI (reg:SI 101 [ D.32833 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:114 -1
     (nil))
(insn 83 82 84 12 (set (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])
        (reg:SI 102 [ D.32833 ])) read_motor_position.cpp:114 -1
     (nil))
;;  succ:       13 (FALLTHRU)

;; basic block 13, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12 (FALLTHRU)
(code_label 84 83 85 13 11 "" [1 uses])
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 13 (set (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])
        (const_int 0 [0])) read_motor_position.cpp:116 -1
     (nil))
(insn 87 86 88 13 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:118 -1
     (nil))
(insn 88 87 89 13 (set (reg/f:DI 103 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 144) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:118 -1
     (nil))
(insn 89 88 90 13 (parallel [
            (set (reg/f:DI 104 [ D.32836 ])
                (plus:DI (reg/f:DI 103 [ D.32836 ])
                    (const_int 176 [0xb0])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:118 -1
     (nil))
(insn 90 89 91 13 (set (reg/f:DI 105 [ D.32837 ])
        (mem/f:DI (reg/f:DI 104 [ D.32836 ]) [0 *_50+0 S8 A64])) read_motor_position.cpp:118 -1
     (nil))
(insn 91 90 92 13 (set (reg:SI 106 [ D.32833 ])
        (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])) read_motor_position.cpp:118 -1
     (nil))
(insn 92 91 93 13 (set (reg:DI 145)
        (sign_extend:DI (reg:SI 106 [ D.32833 ]))) read_motor_position.cpp:118 -1
     (nil))
(insn 93 92 94 13 (set (reg:SI 107 [ D.32833 ])
        (mem/j:SI (plus:DI (mult:DI (reg:DI 145)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("dxl_ID") [flags 0x2]  <var_decl 0x7f214143cea0 dxl_ID>)) [0 dxl_ID S4 A32])) read_motor_position.cpp:118 -1
     (nil))
(insn 94 93 95 13 (set (reg:SI 108 [ D.32833 ])
        (zero_extend:SI (subreg:QI (reg:SI 107 [ D.32833 ]) 0))) read_motor_position.cpp:118 -1
     (nil))
(insn 95 94 96 13 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -37 [0xffffffffffffffdb])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:118 -1
     (nil))
(insn 96 95 97 13 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:118 -1
     (nil))
(insn 97 96 98 13 (set (reg:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:118 -1
     (nil))
(insn 98 97 99 13 (set (reg:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:118 -1
     (nil))
(insn 99 98 100 13 (set (reg:DI 38 r9)
        (reg:DI 146)) read_motor_position.cpp:118 -1
     (nil))
(insn 100 99 101 13 (set (reg:DI 37 r8)
        (reg:DI 147)) read_motor_position.cpp:118 -1
     (nil))
(insn 101 100 102 13 (set (reg:SI 2 cx)
        (const_int 36 [0x24])) read_motor_position.cpp:118 -1
     (nil))
(insn 102 101 103 13 (set (reg:SI 1 dx)
        (reg:SI 108 [ D.32833 ])) read_motor_position.cpp:118 -1
     (nil))
(insn 103 102 104 13 (set (reg:DI 4 si)
        (reg:DI 148)) read_motor_position.cpp:118 -1
     (nil))
(insn 104 103 105 13 (set (reg:DI 5 di)
        (reg:DI 149)) read_motor_position.cpp:118 -1
     (nil))
(call_insn 105 104 106 13 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 105 [ D.32837 ]) [0 *OBJ_TYPE_REF(_51;(struct PacketHandler)packetHandler_16->22) S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:118 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 106 105 107 13 (set (reg:SI 109 [ D.32833 ])
        (reg:SI 0 ax)) read_motor_position.cpp:118 -1
     (nil))
(insn 107 106 108 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])
        (reg:SI 109 [ D.32833 ])) read_motor_position.cpp:118 -1
     (nil))
(insn 108 107 109 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])
            (const_int 0 [0]))) read_motor_position.cpp:119 -1
     (nil))
(jump_insn 109 108 110 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) read_motor_position.cpp:119 -1
     (nil)
 -> 122)
;;  succ:       14 (FALLTHRU)
;;              15

;; basic block 14, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 14 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:121 -1
     (nil))
(insn 112 111 113 14 (set (reg/f:DI 110 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 150) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:121 -1
     (nil))
(insn 113 112 114 14 (parallel [
            (set (reg/f:DI 111 [ D.32836 ])
                (plus:DI (reg/f:DI 110 [ D.32836 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:121 -1
     (nil))
(insn 114 113 115 14 (set (reg/f:DI 112 [ D.32837 ])
        (mem/f:DI (reg/f:DI 111 [ D.32836 ]) [0 *_59+0 S8 A64])) read_motor_position.cpp:121 -1
     (nil))
(insn 115 114 116 14 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])) read_motor_position.cpp:121 -1
     (nil))
(insn 116 115 117 14 (set (reg:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:121 -1
     (nil))
(insn 117 116 118 14 (set (reg:SI 4 si)
        (reg:SI 151)) read_motor_position.cpp:121 -1
     (nil))
(insn 118 117 119 14 (set (reg:DI 5 di)
        (reg:DI 152)) read_motor_position.cpp:121 -1
     (nil))
(call_insn 119 118 120 14 (call (mem:QI (reg/f:DI 112 [ D.32837 ]) [0 *OBJ_TYPE_REF(_60;(struct PacketHandler)packetHandler_16->3) S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:121 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 120 119 121 14 (set (pc)
        (label_ref 138)) -1
     (nil)
 -> 138)
;;  succ:       17

(barrier 121 120 122)
;; basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 122 121 123 15 12 "" [1 uses])
(note 123 122 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 15 (set (reg:QI 113 [ D.32839 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -37 [0xffffffffffffffdb])) [0 dxl_error+0 S1 A8])) read_motor_position.cpp:123 -1
     (nil))
(insn 125 124 126 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ D.32839 ])
            (const_int 0 [0]))) read_motor_position.cpp:123 -1
     (nil))
(jump_insn 126 125 127 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) read_motor_position.cpp:123 -1
     (nil)
 -> 138)
;;  succ:       16 (FALLTHRU)
;;              17

;; basic block 16, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 127 126 128 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 16 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:125 -1
     (nil))
(insn 129 128 130 16 (set (reg/f:DI 114 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 153) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:125 -1
     (nil))
(insn 130 129 131 16 (parallel [
            (set (reg/f:DI 115 [ D.32836 ])
                (plus:DI (reg/f:DI 114 [ D.32836 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:125 -1
     (nil))
(insn 131 130 132 16 (set (reg/f:DI 116 [ D.32837 ])
        (mem/f:DI (reg/f:DI 115 [ D.32836 ]) [0 *_64+0 S8 A64])) read_motor_position.cpp:125 -1
     (nil))
(insn 132 131 133 16 (set (reg:QI 117 [ D.32839 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -37 [0xffffffffffffffdb])) [0 dxl_error+0 S1 A8])) read_motor_position.cpp:125 -1
     (nil))
(insn 133 132 134 16 (set (reg:SI 118 [ D.32833 ])
        (zero_extend:SI (reg:QI 117 [ D.32839 ]))) read_motor_position.cpp:125 -1
     (nil))
(insn 134 133 135 16 (set (reg:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:125 -1
     (nil))
(insn 135 134 136 16 (set (reg:SI 4 si)
        (reg:SI 118 [ D.32833 ])) read_motor_position.cpp:125 -1
     (nil))
(insn 136 135 137 16 (set (reg:DI 5 di)
        (reg:DI 154)) read_motor_position.cpp:125 -1
     (nil))
(call_insn 137 136 138 16 (call (mem:QI (reg/f:DI 116 [ D.32837 ]) [0 *OBJ_TYPE_REF(_65;(struct PacketHandler)packetHandler_16->4) S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:125 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
;;              15
;;              16 (FALLTHRU)
(code_label 138 137 139 17 13 "" [2 uses])
(note 139 138 140 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 17 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:128 -1
     (nil))
(insn 141 140 142 17 (set (reg/f:DI 119 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 155) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:128 -1
     (nil))
(insn 142 141 143 17 (parallel [
            (set (reg/f:DI 120 [ D.32836 ])
                (plus:DI (reg/f:DI 119 [ D.32836 ])
                    (const_int 248 [0xf8])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:128 -1
     (nil))
(insn 143 142 144 17 (set (reg/f:DI 121 [ D.32837 ])
        (mem/f:DI (reg/f:DI 120 [ D.32836 ]) [0 *_70+0 S8 A64])) read_motor_position.cpp:128 -1
     (nil))
(insn 144 143 145 17 (set (reg:SI 122 [ D.32833 ])
        (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])) read_motor_position.cpp:128 -1
     (nil))
(insn 145 144 146 17 (set (reg:DI 156)
        (sign_extend:DI (reg:SI 122 [ D.32833 ]))) read_motor_position.cpp:128 -1
     (nil))
(insn 146 145 147 17 (set (reg:SI 123 [ D.32833 ])
        (mem/j:SI (plus:DI (mult:DI (reg:DI 156)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("dxl_ID") [flags 0x2]  <var_decl 0x7f214143cea0 dxl_ID>)) [0 dxl_ID S4 A32])) read_motor_position.cpp:128 -1
     (nil))
(insn 147 146 148 17 (set (reg:SI 124 [ D.32833 ])
        (zero_extend:SI (subreg:QI (reg:SI 123 [ D.32833 ]) 0))) read_motor_position.cpp:128 -1
     (nil))
(insn 148 147 149 17 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -37 [0xffffffffffffffdb])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:128 -1
     (nil))
(insn 149 148 150 17 (set (reg:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 portHandler+0 S8 A64])) read_motor_position.cpp:128 -1
     (nil))
(insn 150 149 151 17 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:128 -1
     (nil))
(insn 151 150 152 17 (set (reg:DI 38 r9)
        (reg:DI 157)) read_motor_position.cpp:128 -1
     (nil))
(insn 152 151 153 17 (set (reg:SI 37 r8)
        (const_int 20 [0x14])) read_motor_position.cpp:128 -1
     (nil))
(insn 153 152 154 17 (set (reg:SI 2 cx)
        (const_int 32 [0x20])) read_motor_position.cpp:128 -1
     (nil))
(insn 154 153 155 17 (set (reg:SI 1 dx)
        (reg:SI 124 [ D.32833 ])) read_motor_position.cpp:128 -1
     (nil))
(insn 155 154 156 17 (set (reg:DI 4 si)
        (reg:DI 158)) read_motor_position.cpp:128 -1
     (nil))
(insn 156 155 157 17 (set (reg:DI 5 di)
        (reg:DI 159)) read_motor_position.cpp:128 -1
     (nil))
(call_insn 157 156 158 17 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 121 [ D.32837 ]) [0 *OBJ_TYPE_REF(_71;(struct PacketHandler)packetHandler_16->31) S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:128 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 158 157 159 17 (set (reg:SI 125 [ D.32833 ])
        (reg:SI 0 ax)) read_motor_position.cpp:128 -1
     (nil))
(insn 159 158 160 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])
        (reg:SI 125 [ D.32833 ])) read_motor_position.cpp:128 -1
     (nil))
(insn 160 159 161 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])
            (const_int 0 [0]))) read_motor_position.cpp:129 -1
     (nil))
(jump_insn 161 160 162 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) read_motor_position.cpp:129 -1
     (nil)
 -> 174)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 162 161 163 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 18 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:131 -1
     (nil))
(insn 164 163 165 18 (set (reg/f:DI 126 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 160) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:131 -1
     (nil))
(insn 165 164 166 18 (parallel [
            (set (reg/f:DI 127 [ D.32836 ])
                (plus:DI (reg/f:DI 126 [ D.32836 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:131 -1
     (nil))
(insn 166 165 167 18 (set (reg/f:DI 128 [ D.32837 ])
        (mem/f:DI (reg/f:DI 127 [ D.32836 ]) [0 *_79+0 S8 A64])) read_motor_position.cpp:131 -1
     (nil))
(insn 167 166 168 18 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 dxl_comm_result+0 S4 A32])) read_motor_position.cpp:131 -1
     (nil))
(insn 168 167 169 18 (set (reg:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:131 -1
     (nil))
(insn 169 168 170 18 (set (reg:SI 4 si)
        (reg:SI 161)) read_motor_position.cpp:131 -1
     (nil))
(insn 170 169 171 18 (set (reg:DI 5 di)
        (reg:DI 162)) read_motor_position.cpp:131 -1
     (nil))
(call_insn 171 170 172 18 (call (mem:QI (reg/f:DI 128 [ D.32837 ]) [0 *OBJ_TYPE_REF(_80;(struct PacketHandler)packetHandler_16->3) S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:131 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 172 171 173 18 (set (pc)
        (label_ref 190)) -1
     (nil)
 -> 190)
;;  succ:       21

(barrier 173 172 174)
;; basic block 19, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
(code_label 174 173 175 19 14 "" [1 uses])
(note 175 174 176 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 19 (set (reg:QI 129 [ D.32839 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -37 [0xffffffffffffffdb])) [0 dxl_error+0 S1 A8])) read_motor_position.cpp:133 -1
     (nil))
(insn 177 176 178 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ D.32839 ])
            (const_int 0 [0]))) read_motor_position.cpp:133 -1
     (nil))
(jump_insn 178 177 179 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) read_motor_position.cpp:133 -1
     (nil)
 -> 190)
;;  succ:       20 (FALLTHRU)
;;              21

;; basic block 20, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 179 178 180 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 20 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:135 -1
     (nil))
(insn 181 180 182 20 (set (reg/f:DI 130 [ D.32836 ])
        (mem/f/j:DI (reg/f:DI 163) [0 packetHandler_16->_vptr.PacketHandler+0 S8 A64])) read_motor_position.cpp:135 -1
     (nil))
(insn 182 181 183 20 (parallel [
            (set (reg/f:DI 131 [ D.32836 ])
                (plus:DI (reg/f:DI 130 [ D.32836 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) read_motor_position.cpp:135 -1
     (nil))
(insn 183 182 184 20 (set (reg/f:DI 132 [ D.32837 ])
        (mem/f:DI (reg/f:DI 131 [ D.32836 ]) [0 *_84+0 S8 A64])) read_motor_position.cpp:135 -1
     (nil))
(insn 184 183 185 20 (set (reg:QI 133 [ D.32839 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -37 [0xffffffffffffffdb])) [0 dxl_error+0 S1 A8])) read_motor_position.cpp:135 -1
     (nil))
(insn 185 184 186 20 (set (reg:SI 134 [ D.32833 ])
        (zero_extend:SI (reg:QI 133 [ D.32839 ]))) read_motor_position.cpp:135 -1
     (nil))
(insn 186 185 187 20 (set (reg:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 packetHandler+0 S8 A64])) read_motor_position.cpp:135 -1
     (nil))
(insn 187 186 188 20 (set (reg:SI 4 si)
        (reg:SI 134 [ D.32833 ])) read_motor_position.cpp:135 -1
     (nil))
(insn 188 187 189 20 (set (reg:DI 5 di)
        (reg:DI 164)) read_motor_position.cpp:135 -1
     (nil))
(call_insn 189 188 190 20 (call (mem:QI (reg/f:DI 132 [ D.32837 ]) [0 *OBJ_TYPE_REF(_85;(struct PacketHandler)packetHandler_16->4) S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:135 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       21 (FALLTHRU)

;; basic block 21, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
;;              19
;;              20 (FALLTHRU)
(code_label 190 189 191 21 15 "" [2 uses])
(note 191 190 192 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
            (const_int 119 [0x77]))) read_motor_position.cpp:139 -1
     (nil))
(jump_insn 193 192 194 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 200)
            (pc))) read_motor_position.cpp:139 -1
     (nil)
 -> 200)
;;  succ:       24
;;              22 (FALLTHRU)

;; basic block 22, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 (FALLTHRU)
(note 194 193 195 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
            (const_int 115 [0x73]))) read_motor_position.cpp:139 -1
     (nil))
(jump_insn 196 195 197 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 200)
            (pc))) read_motor_position.cpp:139 -1
     (nil)
 -> 200)
;;  succ:       24
;;              23 (FALLTHRU)

;; basic block 23, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 (FALLTHRU)
(note 197 196 198 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 value+0 S4 A32])
            (const_int 122 [0x7a]))) read_motor_position.cpp:139 -1
     (nil))
(jump_insn 199 198 200 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) read_motor_position.cpp:139 -1
     (nil)
 -> 212)
;;  succ:       24 (FALLTHRU)
;;              25

;; basic block 24, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
;;              22
;;              23 (FALLTHRU)
(code_label 200 199 201 24 16 "" [2 uses])
(note 201 200 202 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 24 (set (reg:HI 135 [ D.32840 ])
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 dxl_present_position+0 S2 A32])) read_motor_position.cpp:140 -1
     (nil))
(insn 203 202 204 24 (set (reg:SI 136 [ D.32833 ])
        (zero_extend:SI (reg:HI 135 [ D.32840 ]))) read_motor_position.cpp:140 -1
     (nil))
(insn 204 203 205 24 (set (reg:SI 137 [ D.32833 ])
        (mem/c:SI (symbol_ref:DI ("i") [flags 0x2]  <var_decl 0x7f214143c360 i>) [0 i+0 S4 A32])) read_motor_position.cpp:140 -1
     (nil))
(insn 205 204 206 24 (set (reg:DI 165)
        (sign_extend:DI (reg:SI 137 [ D.32833 ]))) read_motor_position.cpp:140 -1
     (nil))
(insn 206 205 207 24 (set (reg:SI 138 [ D.32833 ])
        (mem/j:SI (plus:DI (mult:DI (reg:DI 165)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("dxl_ID") [flags 0x2]  <var_decl 0x7f214143cea0 dxl_ID>)) [0 dxl_ID S4 A32])) read_motor_position.cpp:140 -1
     (nil))
(insn 207 206 208 24 (set (reg:SI 1 dx)
        (reg:SI 136 [ D.32833 ])) read_motor_position.cpp:140 -1
     (nil))
(insn 208 207 209 24 (set (reg:SI 4 si)
        (reg:SI 138 [ D.32833 ])) read_motor_position.cpp:140 -1
     (nil))
(insn 209 208 210 24 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f21415133f0 *.LC6>)) read_motor_position.cpp:140 -1
     (nil))
(insn 210 209 211 24 (set (reg:QI 0 ax)
        (const_int 0 [0])) read_motor_position.cpp:140 -1
     (nil))
(call_insn 211 210 212 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2142d8e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) read_motor_position.cpp:140 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       25 (FALLTHRU)

;; basic block 25, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 24, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
;;              24 (FALLTHRU)
(code_label 212 211 213 25 17 "" [1 uses])
(note 213 212 214 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 214 213 215 25 (set (pc)
        (label_ref 65)) read_motor_position.cpp:108 -1
     (nil)
 -> 65)
;;  succ:       9 (DFS_BACK)

(barrier 215 214 218)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%] 
;;              5 [100.0%] 
(code_label 218 215 219 27 18 "" [2 uses])
(note 219 218 220 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 224 27 (set (reg:SI 139 [ <retval> ])
        (reg:SI 87 [ D.32833 ])) -1
     (nil))
(insn 224 220 225 27 (set (reg/i:SI 0 ax)
        (reg:SI 139 [ <retval> ])) read_motor_position.cpp:147 -1
     (nil))
(insn 225 224 226 27 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.32841+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) read_motor_position.cpp:147 -1
     (nil))
(jump_insn 226 225 232 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 229)
            (pc))) read_motor_position.cpp:147 -1
     (nil)
 -> 229)
;;  succ:       30
;;              29 (FALLTHRU)

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
(note 232 226 227 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn 227 232 228 29 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f21414dc798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:147 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 228 227 229)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
(code_label 229 228 233 30 19 "" [1 uses])
(note 233 229 230 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 230 233 0 30 (use (reg/i:SI 0 ax)) read_motor_position.cpp:147 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1687, decl_uid=32713, cgraph_uid=470, symbol_order=505)

void __static_initialization_and_destruction_0(int, int) (int __initialize_p, int __priority)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (__initialize_p_2(D) == 1)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (__priority_4(D) == 65535)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  std::ios_base::Init::Init (&__ioinit);
  __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                4
;;                3
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (__initialize_p_2(D) - 2 )
Partition 4 (__priority_4(D) - 4 )


Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )

void __static_initialization_and_destruction_0(int, int) (int __initialize_p, int __priority)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (__initialize_p_2(D) == 1)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (__priority_4(D) == 65535)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  std::ios_base::Init::Init (&__ioinit);
  __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                4
;;                3
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (__initialize_p_2(D) == 1)

(insn 7 6 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) read_motor_position.cpp:147 -1
     (nil))

(jump_insn 8 7 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:147 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (__priority_4(D) == 65535)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) read_motor_position.cpp:147 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_motor_position.cpp:147 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; std::ios_base::Init::Init (&__ioinit);

(insn 13 12 14 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f2141b41750 __ioinit>)) /usr/include/c++/5/iostream:74 -1
     (nil))

(call_insn 14 13 0 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f2141efae58 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle);

(insn 15 14 16 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f21414d83f0 __dso_handle>)) /usr/include/c++/5/iostream:74 -1
     (nil))

(insn 16 15 17 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f2141b41750 __ioinit>)) /usr/include/c++/5/iostream:74 -1
     (nil))

(insn 17 16 18 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f2141f0a000 __comp_dtor >)) /usr/include/c++/5/iostream:74 -1
     (nil))

(call_insn 18 17 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f21414dc000 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 5

;; 

(code_label 19 18 20 21 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->6 redirected to 7
Edge 4->6 redirected to 7
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) read_motor_position.cpp:147 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) read_motor_position.cpp:147 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) read_motor_position.cpp:147 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) read_motor_position.cpp:147 612 {*jcc_1}
     (nil)
 -> 21)
;;  succ:       4 (FALLTHRU)
;;              7

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) read_motor_position.cpp:147 -1
     (nil))
(jump_insn 11 10 12 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) read_motor_position.cpp:147 612 {*jcc_1}
     (nil)
 -> 21)
;;  succ:       5 (FALLTHRU)
;;              7

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f2141b41750 __ioinit>)) /usr/include/c++/5/iostream:74 -1
     (nil))
(call_insn 14 13 15 5 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f2141efae58 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 5 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f21414d83f0 __dso_handle>)) /usr/include/c++/5/iostream:74 -1
     (nil))
(insn 16 15 17 5 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f2141b41750 __ioinit>)) /usr/include/c++/5/iostream:74 -1
     (nil))
(insn 17 16 18 5 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f2141f0a000 __comp_dtor >)) /usr/include/c++/5/iostream:74 -1
     (nil))
(call_insn 18 17 21 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f21414dc000 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              2
;;              4
(code_label 21 18 22 7 20 "" [2 uses])
(note 22 21 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function (static initializers for read_motor_position.cpp) (_GLOBAL__sub_I_dxl_ID, funcdef_no=1688, decl_uid=32719, cgraph_uid=471, symbol_order=612)

(static initializers for read_motor_position.cpp) ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __static_initialization_and_destruction_0 (1, 65535);
  return;
;;    succ:       EXIT

}



Partition map 


After Coalescing:

Partition map 


(static initializers for read_motor_position.cpp) ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __static_initialization_and_destruction_0 (1, 65535);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; __static_initialization_and_destruction_0 (1, 65535);

(insn 5 4 6 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) read_motor_position.cpp:147 -1
     (nil))

(insn 6 5 7 (set (reg:SI 5 di)
        (const_int 1 [0x1])) read_motor_position.cpp:147 -1
     (nil))

(call_insn 7 6 0 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f21414cce58 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:147 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) read_motor_position.cpp:147 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) read_motor_position.cpp:147 -1
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f21414cce58 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) read_motor_position.cpp:147 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

